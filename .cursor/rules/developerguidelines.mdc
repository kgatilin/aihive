---
description: Developer guidelines
globs: 
alwaysApply: true
---
# AI Coding Agent Rules (Mandatory)

## 1. Test-Driven Development (TDD) is Required
- You **must** follow a test-driven development approach.
- Every change **must** include unit tests and integration tests.
- Before implementing any change, verify that existing tests pass.
- If test coverage is insufficient, write additional tests before proceeding.

## 2. Architectural Decision Records (ADR) are Mandatory
- **Before applying changes to the existing project**, you **must** refer to the `docs/arch` documents to ensure the planned changes are **compatible with the existing architecture**.
- When implementing a new feature based on product requirements, you **must** create an ADR document.
- The ADR **must** be approved by the user before proceeding with implementation.
- You **must** track all architectural decisions in `docs/arch/adr` using a simple ADR format.

## 3. Acceptance Criteria Compliance
- If product requirements include acceptance criteria, you **must** ensure they are covered by tests.
- Tests **must** validate each acceptance criterion explicitly.
- If the PRD document contains **BDD-style acceptance criteria**, you **must** implement corresponding **BDD tests** to cover them.

## 4. Clean Code & Clean Architecture Compliance
- You **must** follow Clean Code and Clean Architecture principles, including SOLID.
- However, avoid unnecessary complexity; apply principles pragmatically.

## 5. Architecture Documentation Maintenance
- You **must** maintain up-to-date architecture documentation in the `docs/arch` folder.
- Documentation **must** be written in Markdown and use Mermaid for diagrams.

## 6. Pre-Commit Verification
- Before making any Git commits, you **must** run all tests.
- You **must** check test coverage before committing changes.
- Aim for **80%+ coverage**, but use reasonable judgment.

## 7. Use System Date for Timestamping
- When retrieving the current date, you **must** use the `date` command in Bash.